//
//  DetailScreenInteractor.swift
//  Marvel-App
//
//  Created by Carles Grau Galvan on 12/05/2018.
//  Copyright (c) 2018 Carles Grau Galvan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Kingfisher

protocol DetailScreenBusinessLogic {
    func requestCharacterData(request: DetailScreen.SelectedCharacter.Request)
    func requestComicCollection(request: DetailScreen.CollectionSettings.Request)
    func requestSerieCollection(request: DetailScreen.CollectionSettings.Request)
    func requestEventCollection(request: DetailScreen.CollectionSettings.Request)
}

protocol DetailScreenDataStore {
    var selectedCharacter: Character! {get set}
}

class DetailScreenInteractor: DetailScreenBusinessLogic, DetailScreenDataStore {
    var presenter: DetailScreenPresentationLogic?
    private lazy var worker: DetailScreenWorker = {
        return DetailScreenWorker()
    }()
    var selectedCharacter: Character!

    func requestCharacterData(request: DetailScreen.SelectedCharacter.Request) {
        selectedCharacter = request.char
        guard let thumbnail = request.char.thumbnail else { return }
        guard let url = APIClient.getImageURL(downloadURL: thumbnail.path, extension: thumbnail.thumbnailExtension) else { return }
        let resource = ImageResource(downloadURL: url)
        let response = DetailScreen.SelectedCharacter.Response(name: request.char.name, thumbnailResource: resource, description: request.char.description)
        presenter?.presentCharacter(response: response)
    }

    func requestComicCollection(request: DetailScreen.CollectionSettings.Request) {
        guard let items = request.items else { return }
        presenter?.presentComicCollection(request: worker.getCollectionSetupResponse(items: items))
    }
    func requestSerieCollection(request: DetailScreen.CollectionSettings.Request) {
        guard let items = request.items else { return }
        presenter?.presentSerieCollection(request: worker.getCollectionSetupResponse(items: items))
    }
    func requestEventCollection(request: DetailScreen.CollectionSettings.Request) {
        guard let items = request.items else { return }
        presenter?.presentEventCollection(request: worker.getCollectionSetupResponse(items: items))
    }
}
