//
//  DetailScreenViewController.swift
//  Marvel-App
//
//  Created by Carles Grau Galvan on 12/05/2018.
//  Copyright (c) 2018 Carles Grau Galvan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Kingfisher

protocol DetailScreenDisplayLogic: class
{
    func displayCharacter(viewModel: DetailScreen.SelectedCharacter.ViewModel)
}

class DetailScreenViewController: UITableViewController, DetailScreenDisplayLogic
{
    var interactor: DetailScreenBusinessLogic?
    var router: (NSObjectProtocol & DetailScreenRoutingLogic & DetailScreenDataPassing)?
//    var selectedCharacter: Character! {get set}
    
    @IBOutlet weak var topImage: UIImageView!
    @IBOutlet weak var heroeName: UILabel!
    @IBOutlet weak var heroeDescription: UILabel!
    
    @IBOutlet weak var comicCollection: UICollectionView!
    @IBOutlet weak var serieCollection: UICollectionView!
    @IBOutlet weak var storyCollection: UICollectionView!
    @IBOutlet weak var eventCollection: UICollectionView!
    
    @IBOutlet var collectionOfViews: Array<UITableViewCell>?
    
    @IBOutlet weak var favoriteButton: UIButton!
    @IBOutlet weak var descriptionCell: UITableViewCell!
    
    var comicDataSource: ResourceCollectionDataSource?
    weak public var comicDelegate: ResourceCollectionDelegate?
    
    var serieDataSource: ResourceCollectionDataSource?
    weak public var serieDelegate: ResourceCollectionDelegate?
    
    var storyDataSource: ResourceCollectionDataSource?
    weak public var storyDelegate: ResourceCollectionDelegate?
    
    var eventDataSource: ResourceCollectionDataSource?
    weak public var eventDelegate: ResourceCollectionDelegate?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = DetailScreenInteractor()
        let presenter = DetailScreenPresenter()
        let router = DetailScreenRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomething()
    }
    
    override func viewWillAppear(_ animated: Bool) {
//        self.topImage.imageFromURL(urlString: (interactor?.selectedCharacter.thumbnail?.path)!)
//        self.heroeName.text = output.selectedCharacter.name
//        self.heroeDescription.text = output.selectedCharacter.desc
//        
//        let isFavRequest = SelectedChar.Favorite.IsSelected.Request(char: interactor?.selectedCharacter)
//        output.isFavorite(request: isFavRequest)
    }
    
    func doSomething()
    {
        self.title = interactor?.selectedCharacter.name
        guard let thumbnail = interactor?.selectedCharacter.thumbnail else { return }
        guard let url = APIClient.getImageURL(downloadURL: thumbnail.path, extension: thumbnail.thumbnailExtension) else { return }
        let resource = ImageResource(downloadURL: url)
        self.topImage.kf.setImage(with: resource)
        self.heroeName.text = interactor?.selectedCharacter.name
        self.heroeDescription.text = interactor?.selectedCharacter.description
        setupComicCollection()
        setupSerieCollection()
        setupStoryCollection()
        setupEventCollection()
    }
    
    func setupNavigationBar(){
        self.navigationController?.view.backgroundColor = UIColor(red: 0.918, green: 0.133, blue: 0.180, alpha: 1.00)
    }
    
    func setupComicCollection(){
        comicDataSource = ResourceCollectionDataSource()
        comicDataSource!.resourceData = interactor?.selectedCharacter.comics?.items
        comicCollection.dataSource = comicDataSource
        comicCollection.delegate = ResourceCollectionDelegate()
    }
    
    func setupSerieCollection(){
        serieDataSource = ResourceCollectionDataSource()
        serieDataSource!.resourceData = interactor?.selectedCharacter.series?.items
        serieCollection.dataSource = serieDataSource
        serieCollection.delegate = ResourceCollectionDelegate()
    }
    
    func setupStoryCollection(){
        storyDataSource = ResourceCollectionDataSource()
        storyDataSource!.resourceData = interactor?.selectedCharacter.stories?.items
        storyCollection.dataSource = storyDataSource
        storyCollection.delegate = ResourceCollectionDelegate()
    }
    
    func setupEventCollection(){
        eventDataSource = ResourceCollectionDataSource()
        eventDataSource!.resourceData = interactor?.selectedCharacter.events?.items
        eventCollection.dataSource = eventDataSource
        eventCollection.delegate = ResourceCollectionDelegate()
    }
    
    func displayCharacter(viewModel: DetailScreen.SelectedCharacter.ViewModel){
        doSomething()
    }
}
