//
//  DetailScreenInteractorTests.swift
//  Marvel-App
//
//  Created by Carles Grau Galvan on 13/05/2018.
//  Copyright (c) 2018 Carles Grau Galvan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Marvel_App
import XCTest

class DetailScreenInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: DetailScreenInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupDetailScreenInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupDetailScreenInteractor()
  {
    sut = DetailScreenInteractor()
  }
  
  // MARK: Test doubles
  
  class DetailScreenPresentationLogicSpy: DetailScreenPresentationLogic
  {
    var presentCharacterCalled = false
    var presentComicSetupCalled = false
    var presentSerieSetupCalled = false
    var presentEventSetupCalled = false
    func presentCharacter(response: DetailScreen.SelectedCharacter.Response) {
        presentCharacterCalled = true
    }
    func presentComicCollection(request: DetailScreen.CollectionSettings.Response) {
        presentComicSetupCalled = true
    }
    func presentSerieCollection(request: DetailScreen.CollectionSettings.Response) {
        presentSerieSetupCalled = true
    }
    func presentEventCollection(request: DetailScreen.CollectionSettings.Response) {
        presentEventSetupCalled = true
    }
  }
  
  // MARK: Tests
  
  func testRequestCharacter()
  {
    // Given
    let venom = Mock.CharacterMock().venom
    let spy = DetailScreenPresentationLogicSpy()
    sut.presenter = spy
    let request = DetailScreen.SelectedCharacter.Request(char: venom)
    
    // When
    sut.requestCharacterData(request: request)
    
    // Then
    XCTAssertTrue(spy.presentCharacterCalled, "doSomething(request:) should ask the presenter to format the result")
  }
}
