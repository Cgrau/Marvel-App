//
//  MainScreenPresenterTests.swift
//  Marvel-App
//
//  Created by Carles Grau Galvan on 13/05/2018.
//  Copyright (c) 2018 Carles Grau Galvan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Marvel_App
import XCTest

class MainScreenPresenterTests: XCTestCase {
  // MARK: Subject under test

  var sut: MainScreenPresenter!

  // MARK: Test lifecycle

  override func setUp() {
    super.setUp()
    setupMainScreenPresenter()
  }

  override func tearDown() {
    super.tearDown()
  }

  // MARK: Test setup

  func setupMainScreenPresenter() {
    sut = MainScreenPresenter()
  }

  // MARK: Test doubles

  class MainScreenDisplayLogicSpy: MainScreenDisplayLogic {
    var displayFetchedItemsCalled = false
    func displayFetchedItems(viewModel: MainScreen.FetchItems.ViewModel) {
        displayFetchedItemsCalled = true
    }
  }

  // MARK: Tests

  func testPresentCharacters() {
    // Given
    let mock = Mock.CharacterMock()
    let spy = MainScreenDisplayLogicSpy()
    sut.viewController = spy
    let response = MainScreen.FetchItems.Response(characters: [mock.venom])

    // When
    sut.presentSearchResults(response: response)

    // Then
    XCTAssertTrue(spy.displayFetchedItemsCalled, "presentSomething(response:) should ask the view controller to display the result")
  }
}
